name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.yarn-cache-key }}
    steps:
      - uses: actions/checkout@v3
      - id: cache-keys
        run: echo "::set-output name=yarn-cache-key::${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}"

  yarn-install:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ needs.setup.outputs.cache-key }}
      - name: yarn-install
        run: |
          yarn install
          CHANGES=$(git status -s --ignore-submodules)
          if [[ -n $CHANGES ]]; then
            echo "Changes detected in lockfile or node_modules:"
            echo "$CHANGES"
            exit 1
          fi

  build:
    needs: yarn-install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ needs.setup.outputs.cache-key }}
      - name: build
        run: yarn build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Install Foundry
        uses: onbjerg/foundry-toolchain@v1
        with:
          version: nightly
      - name: deploy
        run: ./ci.sh

  lint:
    needs: yarn-install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ needs.setup.outputs.cache-key }}
      - name: eslint
        run: yarn lint
      - name: prettier
        run: |
          yarn prettier
          CHANGES=$(git status -s)
          if [[ -n $CHANGES ]]; then
            echo "Formatting issues found:"
            echo "$CHANGES"
            exit 1
          fi
